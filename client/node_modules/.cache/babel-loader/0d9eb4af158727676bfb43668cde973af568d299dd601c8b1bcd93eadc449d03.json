{"ast":null,"code":"import { toast } from \"react-hot-toast\";\n/**validate login pageusername */\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n/**validate password */\nfunction passwordVerify() {\n  let errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  /* eslint-disable no-useless-escape */\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password must be more than 4 characters long\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have special character\");\n  }\n  return errors;\n}\n\n/** validate Username  */\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error(\"Username Required...!\");\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(\"Invalid Username...!\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordVerify","specialChars","password","error","includes","length","test","username"],"sources":["G:/login_app/client/src/helper/validate.js"],"sourcesContent":["import { toast } from \"react-hot-toast\";\r\n/**validate login pageusername */\r\nexport async function usernameValidate(values) {\r\n  const errors = usernameVerify({}, values);\r\n  return errors;\r\n}\r\n/**validate password */\r\nfunction passwordVerify(errors = {}, values) {\r\n  /* eslint-disable no-useless-escape */\r\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\n  if (!values.password) {\r\n    errors.password = toast.error(\"Password Required...!\");\r\n  } else if (values.password.includes(\" \")) {\r\n    errors.password = toast.error(\"Wrong Password...!\");\r\n  } else if (values.password.length < 4) {\r\n    errors.password = toast.error(\r\n      \"Password must be more than 4 characters long\"\r\n    );\r\n  } else if (!specialChars.test(values.password)) {\r\n    errors.password = toast.error(\"Password must have special character\");\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\n/** validate Username  */\r\nfunction usernameVerify(error = {}, values) {\r\n  if (!values.username) {\r\n    error.username = toast.error(\"Username Required...!\");\r\n  } else if (values.username.includes(\" \")) {\r\n    error.username = toast.error(\"Invalid Username...!\");\r\n  }\r\n\r\n  return error;\r\n}\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,iBAAiB;AACvC;AACA,OAAO,eAAeC,gBAAgB,CAACC,MAAM,EAAE;EAC7C,MAAMC,MAAM,GAAGC,cAAc,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC;EACzC,OAAOC,MAAM;AACf;AACA;AACA,SAASE,cAAc,GAAsB;EAAA,IAArBF,MAAM,uEAAG,CAAC,CAAC;EAAA,IAAED,MAAM;EACzC;EACA,MAAMI,YAAY,GAAG,yCAAyC;EAE9D,IAAI,CAACJ,MAAM,CAACK,QAAQ,EAAE;IACpBJ,MAAM,CAACI,QAAQ,GAAGP,KAAK,CAACQ,KAAK,CAAC,uBAAuB,CAAC;EACxD,CAAC,MAAM,IAAIN,MAAM,CAACK,QAAQ,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;IACxCN,MAAM,CAACI,QAAQ,GAAGP,KAAK,CAACQ,KAAK,CAAC,oBAAoB,CAAC;EACrD,CAAC,MAAM,IAAIN,MAAM,CAACK,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;IACrCP,MAAM,CAACI,QAAQ,GAAGP,KAAK,CAACQ,KAAK,CAC3B,8CAA8C,CAC/C;EACH,CAAC,MAAM,IAAI,CAACF,YAAY,CAACK,IAAI,CAACT,MAAM,CAACK,QAAQ,CAAC,EAAE;IAC9CJ,MAAM,CAACI,QAAQ,GAAGP,KAAK,CAACQ,KAAK,CAAC,sCAAsC,CAAC;EACvE;EAEA,OAAOL,MAAM;AACf;;AAEA;AACA,SAASC,cAAc,GAAqB;EAAA,IAApBI,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEN,MAAM;EACxC,IAAI,CAACA,MAAM,CAACU,QAAQ,EAAE;IACpBJ,KAAK,CAACI,QAAQ,GAAGZ,KAAK,CAACQ,KAAK,CAAC,uBAAuB,CAAC;EACvD,CAAC,MAAM,IAAIN,MAAM,CAACU,QAAQ,CAACH,QAAQ,CAAC,GAAG,CAAC,EAAE;IACxCD,KAAK,CAACI,QAAQ,GAAGZ,KAAK,CAACQ,KAAK,CAAC,sBAAsB,CAAC;EACtD;EAEA,OAAOA,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}